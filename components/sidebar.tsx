"use client";

import clsx from "clsx";
import { usePathname } from "next/navigation";
import Link from "next/link";
import { LayoutGroup, motion } from "framer-motion";

const navItems = {
  "/": {
    name: "home",
  },
  "/about": {
    name: "about",
  },
  "https://tree.khakimovs.uz": {
    name: "tree",
  },
};

function Logo() {
  return (
    <Link aria-label="Khakimovs Family" href="/">
      <motion.svg
        className="text-black dark:text-white h-[65px] md:h-[65px]"
        width="65"
        height="65"
        viewBox="0 0 1000 1000"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <motion.path
          initial={{
            opacity: 0,
            pathLength: 0,
          }}
          animate={{
            opacity: 1,
            pathLength: 1,
          }}
          transition={{
            duration: 0.5,
            type: "spring",
            stiffness: 50,
          }}
          d="M499.748428,59.1070732 C510.709737,87.6250981 520.04679,108.258331 527.759585,121.006773 C535.472381,133.755215 546.281794,146.421976 560.187826,159.007056 C573.428886,141.682162 585.003986,129.419492 594.913127,122.219046 C604.822268,115.018599 622.255665,106.202336 647.213318,95.7702545 C635.944929,122.909317 628.345186,144.299808 624.414088,159.941728 C620.48299,175.583648 618.895712,190.748505 619.652253,205.436301 C658.527513,208.748679 686.212834,213.097093 702.708214,218.481543 C744.085222,231.987896 778.037854,255.697132 793.733692,270.188404 C894.343624,363.077098 904.949386,487.232474 906.364753,551.912871 C907.151642,587.872636 901.600259,639.665216 883.383586,692.714899 C861.698193,755.866015 822.410359,821.112713 759.296817,867.914595 C752.697585,872.808259 744.379174,878.206388 734.512235,883.730379 C706.042291,899.669234 664.680139,916.655947 614.525202,925.595634 C596.165559,928.868084 572.810042,932.967193 534.926332,932.956684 C528.62872,932.954938 516.986609,932.027542 500,930.174499 C486.712968,931.887674 477.466006,932.815069 472.259114,932.956684 C450.080978,933.559879 435.967001,931.703747 425.746288,931.30554 C405.699294,930.524493 389.431692,928.177796 376.888497,925.595634 C322.222712,914.34205 268.952325,885.527498 243.642591,867.914595 C139.584367,795.501056 89.9848939,652.79647 93.2077084,551.912871 C96.8295159,438.539617 133.424714,323.839131 223.896333,256.615596 C240.757224,244.087372 270.261502,225.753412 307.369295,215.418179 C321.724363,211.420017 345.825706,208.092724 379.673324,205.436301 C381.79552,199.812861 380.867245,186.073785 376.888497,164.219075 C372.909749,142.364365 365.028839,119.548092 353.245768,95.7702545 C379.30845,107.716913 396.664093,116.869344 405.312696,123.227546 C429.849046,141.26596 439.257592,159.003911 439.257592,159.007056 C439.257592,159.214091 454.634583,150.53222 474.387213,117.8282 C480.034492,108.478116 488.488231,88.9044076 499.748428,59.1070732 Z M608.603074,340.124774 C578.234177,351.185051 547.959011,356.71519 517.777577,356.71519 C512.903556,356.71519 505.54566,355.871609 495.703888,354.184448 C485.862116,352.497288 475.551688,350.716395 464.772604,348.841772 C453.99352,346.967149 443.683092,345.186257 433.84132,343.499096 C423.999548,341.811935 416.641652,340.968354 411.767631,340.968354 C403.331826,340.968354 395.97393,341.624473 389.693942,342.936709 C383.413954,344.248945 377.649488,346.685955 372.400542,350.24774 C367.151597,353.809524 362.277577,358.683544 357.778481,364.869801 C353.279385,371.056058 348.686558,379.116938 344,389.052441 C337.438819,403.112116 331.721218,412.766426 326.847197,418.015371 C329.846594,415.57836 333.877034,413.328813 338.938517,411.266727 C344.749849,408.642254 350.748644,406.25211 356.934901,404.096293 C363.121157,401.940476 369.166817,400.253315 375.071881,399.03481 C380.976944,397.816305 385.89783,397.207052 389.834539,397.207052 C398.832731,397.207052 406.893611,398.706751 414.017179,401.706148 C410.267932,406.955093 407.034207,411.54792 404.316004,415.484629 C401.5978,419.421338 399.395118,422.608198 397.707957,425.045208 C357.403556,477.722122 337.251356,530.117842 337.251356,582.232369 C337.251356,629.472875 349.155214,670.714587 372.962929,705.957505 C400.707354,746.824292 436.606389,767.257685 480.660036,767.257685 C494.532248,767.445148 509.716697,765.289331 526.213382,760.790235 C542.710066,756.291139 560.893912,749.542495 580.764919,740.544304 C621.256781,723.29777 649.751055,704.176612 666.24774,683.180832 C616.007836,698.36528 566.986438,705.957505 519.183544,705.957505 C417.016576,705.957505 365.933092,666.777878 365.933092,588.418626 C365.933092,559.549427 370.853978,533.53903 380.69575,510.387432 C390.537523,487.235835 404.690928,467.552291 423.155967,451.336799 C441.621007,435.121308 463.882158,422.655063 489.939421,413.938065 C515.996685,405.221067 545.053345,400.862568 577.109403,400.862568 C581.233574,400.862568 584.748493,400.909433 587.654159,401.003165 C590.559825,401.096896 593.043701,401.331224 595.105787,401.706148 L608.603074,340.124774 Z"
          stroke="currentColor"
          strokeWidth={20}
        />
        <motion.path
          initial={{ x: -200, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{
            duration: 0.5,
            type: "spring",
            stiffness: 50,
          }}
          d="M435.495596,77.8971137 C435.495596,77.8971137 438.24215,86.8522365 448.748196,98.9682514 C451.747099,102.426714 458.212347,107.703593 468.14394,114.798889 C462.755127,123.431434 458.527432,129.625658 455.460856,133.381561 C452.39428,137.137465 447.546714,142.102297 440.918159,148.276057 C431.911825,137.545777 424.168861,129.34709 417.689266,123.679998 C411.209671,118.012906 400.481222,110.966887 385.503918,102.541939 C398.134005,98.3737644 406.39595,95.3564548 410.289753,93.4900098 C430.100352,83.9940521 435.495596,77.8971137 435.495596,77.8971137 Z"
          fill="currentColor"
        />
        <motion.path
          initial={{ x: -200, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{
            duration: 0.5,
            type: "spring",
            stiffness: 50,
          }}
          d="M572.609151,78.8971137 C567.624246,86.6909251 562.234056,93.0877434 556.438581,98.0875686 C550.643106,103.087394 542.43684,108.420399 531.819784,114.086585 C537.931775,123.622113 542.812015,130.662432 546.460503,135.207542 C550.108992,139.752652 554.644614,144.442157 560.067371,149.276057 C567.435585,139.03339 574.179049,131.257738 580.297762,125.9491 C586.416475,120.640462 595.635354,114.567076 607.954397,107.728942 C599.911178,104.262242 593.699944,100.742772 589.320698,97.1705325 C584.941452,93.5982931 579.370936,87.5071535 572.609151,78.8971137 Z"
          fill="currentColor"
        />
      </motion.svg>
    </Link>
  );
}

export default function Navbar() {
  let pathname = usePathname() || "/";
  if (pathname.includes("/blog/")) {
    pathname = "/blog";
  }

  return (
    <aside className="md:w-[150px] md:flex-shrink-0 -mx-4 md:mx-0 md:px-0 font-serif">
      <div className="lg:sticky lg:top-20">
        <div className="mb-2 px-4 md:px-0 md:mb-8 space-y-10 flex flex-col md:flex-row items-start ">
          <Logo />
        </div>
        <LayoutGroup>
          <nav
            className="flex flex-row md:flex-col items-start relative px-4 md:px-0 pb-0 fade md:overflow-auto scroll-pr-6 md:relative"
            id="nav"
          >
            <div className="flex flex-row md:flex-col space-x-0 pr-10 mb-2 mt-2 md:mt-0">
              {Object.entries(navItems).map(([path, { name }]) => {
                const isActive = path === pathname;
                return (
                  <Link
                    key={path}
                    href={path}
                    className={clsx(
                      "transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle",
                      {
                        "text-neutral-500": !isActive,
                        "font-bold": isActive,
                      },
                    )}
                  >
                    <span className="relative py-[5px] px-[10px]">
                      {name}
                      {path === pathname ? (
                        <motion.div
                          className="absolute inset-0 bg-neutral-100 dark:bg-neutral-800 rounded-md z-[-1]"
                          layoutId="sidebar"
                          transition={{
                            type: "spring",
                            stiffness: 350,
                            damping: 30,
                          }}
                        />
                      ) : null}
                    </span>
                  </Link>
                );
              })}
            </div>
          </nav>
        </LayoutGroup>
      </div>
    </aside>
  );
}
